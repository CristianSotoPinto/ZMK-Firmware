#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
  combos {
    compatible = "zmk,combos";

    combo_COMBO_UP {
      timeout-ms = <50>;
      key-positions = <7 8>;
      layers = <BASE>;
      bindings = <&kp UP>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    Base_layer {
      bindings = <
       &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT

        //&kp TAB &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp BACKSPACE &kp LEFT_SHIFT &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMICOLON &kp SINGLE_QUOTE &kp LEFT_CONTROL &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp PERIOD &kp SLASH &mt RSHIFT RIGHT &kp undefined &mo LOWER &kp RETURN &kp SPACE &mo RAISE &mt RIGHT_ALT DOWN
      >;
    };

    Lower_layer {
      bindings = <
        &kp ESCAPE &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &kp NUMBER_0 &kp BACKSPACE &hm LALT TAB &kp LC(A) &kp LC(S) &kp LC(D) &kp LC(F) &kp LC(G) &kp PG_UP &kp HOME &kp UP_ARROW &kp END &kp INSERT &trans &kp LEFT_CONTROL) &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp LC(B) &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp DEL &trans &kp LEFT_GUI &trans &kp RETURN &kp SPACE &trans &kp RIGHT_ALT
      >;
    };

    Raise_layer {
      bindings = <
        &kp TAB &kp EXCLAMATION &kp AT_SIGN &kp HASH &kp DOLLAR &kp PERCENT &kp CARET &kp AMPERSAND &kp ASTERISK &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp undefined LWIN(UP) &kp C_PREVIOUS &kp C_NEXT &kp C_PLAY LWIN(LEFT) LWIN(RIGHT) &kp MINUS &kp EQUAL &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp BACKSLASH &kp GRAVE LWIN(DOWN) &kp C_VOLUME_DOWN &kp C_VOLUME_UP &kp C_MUTE LC(LWIN(LEFT)) LC(LWIN(RIGHT)) &kp UNDERSCORE &kp PLUS &kp LEFT_BRACE &kp RIGHT_BRACE &kp PIPE &kp TILDE &kp LEFT_GUI &trans &kp SPACE &kp RETURN &trans &kp DEL
      >;
    };

    adjust_layer {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &bt BT_CLR &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_NXT &none &none &none &none &none &none &none &none &none &none &none &bt BT_PRV &none &none &none &none &none &none &none &none &none &none &none &none
      >;
    };

  };
};